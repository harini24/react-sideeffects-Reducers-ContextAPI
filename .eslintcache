[{"E:\\udemy react\\react-sideeffects-reducers-context API\\src\\index.js":"1","E:\\udemy react\\react-sideeffects-reducers-context API\\src\\App.js":"2","E:\\udemy react\\react-sideeffects-reducers-context API\\src\\components\\Home\\Home.js":"3","E:\\udemy react\\react-sideeffects-reducers-context API\\src\\components\\MainHeader\\MainHeader.js":"4","E:\\udemy react\\react-sideeffects-reducers-context API\\src\\components\\Login\\Login.js":"5","E:\\udemy react\\react-sideeffects-reducers-context API\\src\\components\\MainHeader\\Navigation.js":"6","E:\\udemy react\\react-sideeffects-reducers-context API\\src\\components\\UI\\Card\\Card.js":"7","E:\\udemy react\\react-sideeffects-reducers-context API\\src\\components\\UI\\Button\\Button.js":"8","E:\\udemy react\\react-sideeffects-reducers-context API\\src\\store\\auth-context.js":"9","E:\\udemy react\\react-sideeffects-reducers-context API\\src\\components\\UI\\Input\\Input.js":"10"},{"size":272,"mtime":1621271603941,"results":"11","hashOfConfig":"12"},{"size":504,"mtime":1621271868810,"results":"13","hashOfConfig":"12"},{"size":250,"mtime":1616593928000,"results":"14","hashOfConfig":"12"},{"size":307,"mtime":1621270245218,"results":"15","hashOfConfig":"12"},{"size":3817,"mtime":1621273858883,"results":"16","hashOfConfig":"12"},{"size":669,"mtime":1621272042773,"results":"17","hashOfConfig":"12"},{"size":218,"mtime":1616593928000,"results":"18","hashOfConfig":"12"},{"size":353,"mtime":1616593928000,"results":"19","hashOfConfig":"12"},{"size":1054,"mtime":1621271921018,"results":"20","hashOfConfig":"12"},{"size":438,"mtime":1621273708692,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16mf52g",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"E:\\udemy react\\react-sideeffects-reducers-context API\\src\\index.js",[],"E:\\udemy react\\react-sideeffects-reducers-context API\\src\\App.js",[],"E:\\udemy react\\react-sideeffects-reducers-context API\\src\\components\\Home\\Home.js",[],["44","45"],"E:\\udemy react\\react-sideeffects-reducers-context API\\src\\components\\MainHeader\\MainHeader.js",[],"E:\\udemy react\\react-sideeffects-reducers-context API\\src\\components\\Login\\Login.js",["46"],"import React, { useState, useEffect, useReducer, useContext } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input'\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.includes('@') }\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.includes('@') }\n  }\n  return {\n    value: '',\n    isValid: null\n  }\n\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.trim().length > 6 }\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.trim().length > 6 }\n  }\n  return {\n    value: '',\n    isValid: null\n  }\n\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const ctx = useContext(AuthContext)\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  })\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  })\n  // useEffect(() => {\n  //   console.log('EFFECT RUNNING');\n  //   setFormIsValid(\n  //     enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //   );\n  //   return () => {\n  //     console.log('EFFECT CLEANUP');\n  //   };\n  // }, [enteredEmail,enteredPassword]);\n\n  const { isValid: emailIsValid } = emailState\n  const { isValid: passwordIsValid } = passwordState\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(\n        emailState.isValid && passwordState.isValid\n      );\n    }, 500);\n\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: 'USER_INPUT', val: event.target.value })\n\n    // setFormIsValid(\n    //   event.target.value.includes('@')  && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: 'USER_INPUT', val: event.target.value })\n\n    // setFormIsValid(\n    //   emailState.isValid  && event.targte.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: 'INPUT_BLUR' })\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: 'INPUT_BLUR' })\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    ctx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input  type=\"email\"\n            id=\"email\"\n            label=\"E-Mail\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n            isValid={emailState.isValid}></Input>\n         <Input  type=\"password\"\n            id=\"password\"\n            label=\"Password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n            isValid={passwordState.isValid}></Input>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","E:\\udemy react\\react-sideeffects-reducers-context API\\src\\components\\MainHeader\\Navigation.js",[],"E:\\udemy react\\react-sideeffects-reducers-context API\\src\\components\\UI\\Card\\Card.js",[],"E:\\udemy react\\react-sideeffects-reducers-context API\\src\\components\\UI\\Button\\Button.js",[],"E:\\udemy react\\react-sideeffects-reducers-context API\\src\\store\\auth-context.js",[],"E:\\udemy react\\react-sideeffects-reducers-context API\\src\\components\\UI\\Input\\Input.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":77,"column":6,"nodeType":"53","endLine":77,"endColumn":37,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'emailState.isValid' and 'passwordState.isValid'. Either include them or remove the dependency array.","ArrayExpression",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [emailIsValid, emailState.isValid, passwordIsValid, passwordState.isValid]",{"range":"60","text":"61"},[2194,2225],"[emailIsValid, emailState.isValid, passwordIsValid, passwordState.isValid]"]